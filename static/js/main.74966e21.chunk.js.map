{"version":3,"sources":["store/types/index.js","store/actions-creators/table.js","store/actions-creators/index.js","hooks/useActions.js","components/AddButton/index.js","components/AddButton/AddButton.js","components/Alert/index.js","components/Alert/Alert.js","components/Table/TableRow/index.js","components/Table/TableRow/TableRow.js","components/Table/index.js","components/Table/Table.js","components/TextArea/index.js","components/TextArea/TextArea.js","components/App/index.js","components/App/App.js","store/reducers/tableReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["SET_TABLE","ADD_ROW","DELETE_ROW","EDIT_ROW","SET_ERROR","CHANGE_ROWS","addEmptyRow","rowData","id","uid","name","value","type","types","payload","deleteRow","editRow","changeRows","setTable","textAreaData","dispatch","data","JSON","parse","map","row","e","TableActionCreator","useActions","useDispatch","bindActionCreators","ActionCreators","AddButton","className","onClick","Alert","error","useSelector","state","table","class","role","TableRow","index","isFirstRow","isLastRow","onChange","target","firstIndex","secondIndex","disabled","Table","rows","length","scope","colSpan","TextArea","useState","textValue","setTextValue","useEffect","stringify","visibleRows","App","initialState","tableReducer","action","console","log","rowChange","filter","changedRows","changedRow","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74966e21.chunk.js","sourcesContent":["export const SET_TABLE = \"SET_TABLE\";\r\nexport const ADD_ROW = \"ADD_ROW\";\r\nexport const DELETE_ROW = \"DELETE_ROW\";\r\nexport const EDIT_ROW = \"EDIT_ROW\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const CHANGE_ROWS = \"CHANGE_ROWS\";\r\n","import { uid } from \"uid\";\r\nimport * as types from \"../types\";\r\n\r\nexport const addEmptyRow = () => {\r\n  const rowData = {\r\n    id: uid(),\r\n    name: \"\",\r\n    value: \"\",\r\n  };\r\n  return { type: types.ADD_ROW, payload: rowData };\r\n};\r\n\r\nexport const deleteRow = (id) => ({ type: types.DELETE_ROW, payload: id });\r\nexport const editRow = (rowData) => {\r\n  return { type: types.EDIT_ROW, payload: rowData };\r\n};\r\n\r\nexport const changeRows = (payload) => ({ type: types.CHANGE_ROWS, payload });\r\n\r\nexport const setTable = (textAreaData) => (dispatch) => {\r\n  dispatch({\r\n    type: types.SET_ERROR,\r\n    payload: null,\r\n  });\r\n  try {\r\n    const data = JSON.parse(textAreaData);\r\n\r\n    dispatch({\r\n      type: types.SET_TABLE,\r\n      payload: data.map((row) => ({ id: uid(), ...row })),\r\n    });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: types.SET_ERROR,\r\n      payload: \"Ошибка преобразования строки\",\r\n    });\r\n  }\r\n};\r\n","import * as TableActionCreator from \"./table\";\r\nexport default TableActionCreator;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ActionCreators from \"../store/actions-creators\";\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import AddButton from \"./AddButton\";\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\n\r\nconst AddButton = () => {\r\n  const { addEmptyRow } = useActions();\r\n  return (\r\n    <div className=\"d-flex justify-content-between mb-5\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        onClick={() => addEmptyRow()}\r\n      >\r\n        Добавить новую строку\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import Alert from \"./Alert\";\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Alert = () => {\r\n  const { error } = useSelector((state) => state.table);\r\n  if (!error) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div class=\"alert alert-danger\" role=\"alert\">\r\n      {error}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import TableRow from \"./TableRow\";\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { FaTimes, FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"./TableRow.css\";\r\n\r\nconst TableRow = ({ id, name, value, index, isFirstRow, isLastRow }) => {\r\n  const { deleteRow, editRow, changeRows } = useActions();\r\n\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          className=\"tableInput\"\r\n          name={\"name\" + id}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => {\r\n            editRow({ id, name: e.target.value, value });\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <input\r\n          className=\"tableInput\"\r\n          name={\"value\" + id}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => {\r\n            editRow({ id, name, value: e.target.value });\r\n          }}\r\n        />\r\n      </td>\r\n\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() =>\r\n            changeRows({ firstIndex: index, secondIndex: index - 1 })\r\n          }\r\n          disabled={isFirstRow}\r\n        >\r\n          <FaChevronUp />\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() =>\r\n            changeRows({ firstIndex: index, secondIndex: index + 1 })\r\n          }\r\n          disabled={isLastRow}\r\n        >\r\n          <FaChevronDown />\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button className=\"btn btn-danger\" onClick={() => deleteRow(id)}>\r\n          <FaTimes />\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import Table from \"./Table\";\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TableRow from \"./TableRow\";\r\n\r\nconst Table = () => {\r\n  const { rows } = useSelector((state) => state.table);\r\n\r\n  const renderRows = () =>\r\n    rows.map((row, index) => {\r\n      const isFirstRow = index === 0;\r\n      const isLastRow = index === rows.length - 1;\r\n      return (\r\n        <TableRow\r\n          key={row.id}\r\n          {...row}\r\n          index={index}\r\n          isFirstRow={isFirstRow}\r\n          isLastRow={isLastRow}\r\n        />\r\n      );\r\n    });\r\n\r\n  if (rows.length === 0) {\r\n    return <h2>Empty table</h2>;\r\n  }\r\n\r\n  return (\r\n    <table className=\"table text-center bg-white\">\r\n      <thead className=\"bg-primary\">\r\n        <tr className=\"text-light\">\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Value</th>\r\n          <th scope=\"col\" colSpan=\"3\">\r\n            table actions\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className=\"text-center\">{renderRows()}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import TextArea from \"./TextArea\";\r\nexport default TextArea;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport \"./TextArea.css\";\r\n\r\nconst TextArea = () => {\r\n  const [textValue, setTextValue] = useState();\r\n  const { rows } = useSelector((state) => state.table);\r\n  const { setTable } = useActions();\r\n\r\n  useEffect(() => {\r\n    setTextValue(JSON.stringify(visibleRows));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const visibleRows = rows.map(({ name, value }) => ({ name, value }));\r\n\r\n  const onClick = () => {\r\n    setTextValue(JSON.stringify(visibleRows));\r\n  };\r\n  const onChange = (e) => {\r\n    setTextValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <textarea\r\n        className=\"textarea\"\r\n        value={textValue}\r\n        onChange={onChange}\r\n      ></textarea>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={onClick}>\r\n          Сохранить\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => setTable(textValue)}\r\n        >\r\n          Загрузить\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import App from \"./App\";\r\nexport default App;\r\n","import React from \"react\";\nimport AddButton from \"../AddButton\";\nimport Alert from \"../Alert\";\nimport Table from \"../Table\";\nimport TextArea from \"../TextArea\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Table />\n      <AddButton />\n      <TextArea />\n      <Alert />\n    </div>\n  );\n};\n\nexport default App;\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  rows: [\r\n    { id: \"1\", name: \"test1\", value: \"1\" },\r\n    { id: \"2\", name: \"test2\", value: \"2\" },\r\n    { id: \"3\", name: \"test3\", value: \"3\" },\r\n    { id: \"4\", name: \"test4\", value: \"4\" },\r\n  ],\r\n  error: null,\r\n};\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_TABLE:\r\n      console.log(\"test\");\r\n      return { ...state, rows: action.payload };\r\n    case types.ADD_ROW:\r\n      return { ...state, rows: [...state.rows, action.payload] };\r\n    case types.SET_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case types.EDIT_ROW:\r\n      return {\r\n        ...state,\r\n        rows: state.rows.map((row) => {\r\n          const { id, ...rowChange } = action.payload;\r\n          if (row.id === id) {\r\n            return {\r\n              ...row,\r\n              ...rowChange,\r\n            };\r\n          }\r\n          return row;\r\n        }),\r\n      };\r\n    case types.DELETE_ROW:\r\n      return {\r\n        ...state,\r\n        rows: state.rows.filter((row) => row.id !== action.payload),\r\n      };\r\n    case types.CHANGE_ROWS:\r\n      const { firstIndex, secondIndex } = action.payload;\r\n      const changedRows = [...state.rows];\r\n      if (!changedRows[firstIndex] || !changedRows[secondIndex]) {\r\n        return state;\r\n      }\r\n      const changedRow = changedRows[firstIndex];\r\n      changedRows[firstIndex] = changedRows[secondIndex];\r\n      changedRows[secondIndex] = changedRow;\r\n\r\n      return {\r\n        ...state,\r\n        rows: changedRows,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tableReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport tableReducer from \"./tableReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  table: tableReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}